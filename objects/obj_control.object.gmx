<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!scr_fading() &amp;&amp; instance_number(obj_bat) &gt; 0)
    scr_room_goto(room);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var exit_pressed = false;
var restart_pressed = false;
var up_pressed = false;
var down_pressed = false;
var confirm_pressed = false;

if (!scr_fading()) {
    exit_pressed = keyboard_check_pressed(vk_escape);
    restart_pressed = keyboard_check_pressed(ord("R"));
    up_pressed = keyboard_check_pressed(vk_up);
    down_pressed = keyboard_check_pressed(vk_down);
    confirm_pressed = keyboard_check_pressed(vk_enter);
}

if (exit_pressed)
    scr_room_goto(rm_level_select);
    
if (restart_pressed) {
    with (obj_player)
        instance_destroy();
}

if (instance_number(obj_bat) &lt;= 0) {
    if (!complete) {
        complete = true;
        audio_stop_sound(global.music);
        audio_play_sound(snd_fanfare, 0, false);
        
        if (global.levels_completed &lt;= global.selected) {
            global.levels_completed++;
            
            ini_open("sbj_data");
            ini_write_real("data", "levels_completed", global.levels_completed);
            ini_close();
        }
    }

    if (up_pressed || down_pressed) {
        audio_play_sound(snd_select, 0, false);
        retry = !retry;
    }
    if (confirm_pressed) {
        audio_play_sound(snd_confirm, 0, false);
        if (retry)
            scr_room_goto(room);
        else
            scr_room_goto(rm_level_select);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_fanfare);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0, 0, obj_white);

global.bats = 0;

retry = true;
complete = false;

audio_stop_sound(snd_main_music);
audio_stop_sound(snd_fanfare);
if (!audio_is_playing(global.music))
    audio_play_sound(global.music, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var v_x = view_xview[0];
var v_y = view_yview[0];
var v_width = view_wview[0];
var v_height = view_hview[0];

if (instance_number(obj_bat) &lt;= 0) {
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    
    draw_rectangle(v_x, v_y, v_x + v_width, v_y + v_height, false);
    
    draw_set_alpha(1);
    
    var exit_text = "Exit";
    var retry_text = "Retry";
    
    if (retry)
        retry_text = "&gt; Retry &lt;";
    else
        exit_text = "&gt; Exit &lt;";
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    
    var text_x = v_x + v_width / 2;
    var complete_y = v_y + v_height / 4;
    var option_y = v_y + v_height * (3 / 4);
    
    draw_set_font(fnt_complete);
    
    scr_draw_layered_text(text_x, complete_y, "Level Complete", 2, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));
    
    draw_set_font(fnt_option);
    
    scr_draw_layered_text(text_x, option_y - 16, retry_text, 1, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));
    scr_draw_layered_text(text_x, option_y + 16, exit_text, 1, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
