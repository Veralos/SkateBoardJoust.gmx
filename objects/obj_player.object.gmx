<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_x = 0;
move_y = 0;
grav = 0;
facing = 1;
skate = false;
canjump = false;
animate = 0;
skate_x = x;
skate_y = y;
board_flash = 5;
left_key = ds_list_find_value(global.control_list, 0);
right_key = ds_list_find_value(global.control_list, 1);
jump_key = ds_list_find_value(global.control_list, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!scr_fading())
    audio_play_sound(snd_boy_die, 0, false);

obj_control.alarm[0] = 60;

for (var i = 0; i &lt; 5; i++) {
    var part = instance_create(x, y, obj_part);
    part.sprite_index = spr_boy_part;
    part.sprite_w = spr_boy_part_w;
    part.image_index = i;
}

if (skate) {
    var part = instance_create(x, y, obj_part);
    part.sprite_index = spr_board;
    part.sprite_w = spr_board_w;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.paused) {
    if (y + 16 &gt; room_height)
        instance_destroy();
    
    var left_held = false;
    var right_held = false;
    var jump_pressed = false;
    var jump_released = false;
    
    if (!scr_fading() &amp;&amp; instance_number(obj_bat) &gt; 0) {
        left_held = keyboard_check_direct(left_key);
        right_held = keyboard_check_direct(right_key);
        jump_pressed = keyboard_check_pressed(jump_key);
        jump_released = keyboard_check_released(jump_key);
    }
    
    if (!skate) {
        obj_control.combo = 1;
    
        if (left_held &amp;&amp; move_x &gt; -1)
            move_x -= 0.25;
        if (right_held &amp;&amp; move_x &lt; 1)
            move_x += 0.25;
            
        if (move_x &lt; 0.125 &amp;&amp; move_x &gt; -0.125)
            move_x = 0;
        
        if (move_x != 0) {
            facing = sign(move_x);
            move_x -= 0.125 * sign(move_x);
        }
    }
        
    if (jump_pressed) {
        if (place_free(x, y + 1)) {
            if (skate) {
                if (canjump) {
                    audio_play_sound(snd_jump, 0, false);
                    move_y = -1.6;
                    skate = false;
                    var board = instance_create(x, y, obj_part);
                    board.sprite_index = spr_board;
                    board.sprite_w = spr_board_w;
                }
            }
            else if (!place_free(x + facing, y)) {
                audio_play_sound(snd_jump, 0, false);
                move_y = -1.6;
                move_x = -1.6 * facing;
            }
            else {
                audio_play_sound(snd_skate, 0, false);
                skate = true;
                move_x = 2 * facing;
                move_y = -0.5;
                board_flash = 0;
            }
            canjump = false;
        }
        else {
            audio_play_sound(snd_jump, 0, false);
            move_y = -1.6;
        }
    }
    
    if (jump_released &amp;&amp; move_y &lt; 0)
        move_y /= 2;
        
    if (place_free(x, y + 1))
        grav = 0.1;
    else {
        grav = 0;
        canjump = true;
    }
        
    move_y += grav;
    
    if (move_y &gt; 2)
        move_y = 2;
        
    ramp = false;
        
    if (place_free(x + round(4 * move_x), y))
        x += round(4 * move_x);
    /*else if (place_free(x + round(4 * move_x / sqrt(2)), y - round(4 * abs(move_x) / sqrt(2)))) {
        ramp = true;
        
        x += round(4 * move_x / sqrt(2));
        y -= round(4 * abs(move_x) / sqrt(2));
    }*/
    else {
        move_contact_solid(90 - sign(move_x) * 90, round(move_x * 4));
        if (skate) {
            audio_play_sound(snd_lose_board, 0, false);
            skate = false;
            var board = instance_create(x, y, obj_part);
            board.sprite_index = spr_board;
            board.sprite_w = spr_board_w;
        }
        else
            move_x = 0;
    }
    if (place_free(x, y + round(4 * move_y)))
        y += round(4 * move_y);
    else {
        if (move_y &gt; 0)
            audio_play_sound(snd_land, 0, false);
        move_contact_solid(180 + sign(move_y) * 90, round(move_y * 4));
        move_y = 0;
    }
    
    //Animation
    
    skate_xp = skate_x;
    skate_yp = skate_y;
    skate_x = x - 13 * facing - 1;
    skate_y = y + 13;
    
    sprite = -1;
    sprite_w = -1;
    if (skate) {
        var rail = instance_place(x, y + 1, obj_rail);
    
        if (rail != noone &amp;&amp; rail.solid = true) {
            audio_play_sound(snd_grind, 0, false);
            
            instance_create(x - 3 * facing, y + 16, obj_spark);
            
            skate_x = x - 12 * facing - 1;
            skate_y = y + 17;
        
            sprite = spr_boy_grind;
            sprite_w = spr_boy_grind_w;
        }
        else {
            sprite = spr_boy_skate;
            sprite_w = spr_boy_skate_w;
        }
        
        var trail = instance_create(skate_x, skate_y, obj_trail);
        trail.xp = skate_xp;
        trail.yp = skate_yp;
    }
    else {
        if (place_free(x, y + 1)) {
            if (move_y &gt;= 0) {
                sprite = spr_boy_fall;
                sprite_w = spr_boy_fall_w;
            }
            else {
                sprite = spr_boy_jump;
                sprite_w = spr_boy_jump_w;
            }
        }
        else if (round(move_x * 4) == 0) {
            sprite = spr_boy;
            sprite_w = spr_boy_w;
        }
        else {
            sprite = spr_boy_run;
            sprite_w = spr_boy_run_w;
            if (ramp)
                animate += abs(move_x) * 0.25 / sqrt(2);
            else
                animate += abs(move_x) * 0.25;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_death">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (skate) {
    obj_control.points += 1000 * obj_control.combo;
    var points = instance_create(x, y - 16, obj_score);
    points.value = 1000 * obj_control.combo;
    obj_control.combo++;
    with (other)
        instance_destroy();
}
else
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite, animate, round(x), round(y), facing, image_yscale, image_angle, image_blend, image_alpha);
if (board_flash &lt; 5) {
    draw_sprite_ext(spr_board_flash, board_flash, round(x), round(y) + 13, facing * 1.25, image_yscale * 1.25, image_angle, image_blend, image_alpha);
    board_flash += 0.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
