<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("sbj_data")
global.levels_completed = ini_read_real("data", "levels_completed", 0);
ini_close();

level_list = ds_list_create();

ds_list_add(level_list, rm_intro);
ds_list_add(level_list, rm_test);
ds_list_add(level_list, rm_flat);
ds_list_add(level_list, rm_waves);
ds_list_add(level_list, rm_ledges);
ds_list_add(level_list, rm_tall);
ds_list_add(level_list, rm_basin);
ds_list_add(level_list, rm_downhill);
ds_list_add(level_list, rm_bowl);
ds_list_add(level_list, rm_layers);
ds_list_add(level_list, rm_plat);
ds_list_add(level_list, rm_hills);
ds_list_add(level_list, rm_plat2);
ds_list_add(level_list, rm_abyss);
ds_list_add(level_list, rm_void);
ds_list_add(level_list, rm_grind);
ds_list_add(level_list, rm_arena);

global.selected = 0;

music_list = ds_list_create();

ds_list_add(music_list, snd_music1);
ds_list_add(music_list, snd_music2);
ds_list_add(music_list, snd_music3);
ds_list_add(music_list, snd_music4);

global.music = snd_music1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var up_pressed = false;
var down_pressed = false;
var confirm_pressed = false;
var quit_pressed = false;

if (!scr_fading()) {
    up_pressed = keyboard_check_pressed(vk_up);
    down_pressed = keyboard_check_pressed(vk_down);
    confirm_pressed = keyboard_check_pressed(vk_enter);
    quit_pressed = keyboard_check_pressed(vk_escape);
}


if (up_pressed &amp;&amp; global.selected &gt; 0) {
    audio_play_sound(snd_select, 0, false);
    global.selected--;
}
if (down_pressed &amp;&amp; global.selected &lt; ds_list_size(level_list) - 1) {
    audio_play_sound(snd_select, 0, false);
    global.selected++;
}
    
if (confirm_pressed) {
    if (global.selected &lt;= global.levels_completed) {
        audio_play_sound(snd_confirm, 0, false);
        global.music = ds_list_find_value(music_list, global.selected mod ds_list_size(music_list));
        scr_room_goto(ds_list_find_value(level_list, global.selected));
    }
    else
        audio_play_sound(snd_error, 0, false);
}

if (quit_pressed)
    scr_room_goto(rm_title);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(global.music);
if (!audio_is_playing(snd_main_music))
    audio_play_sound(snd_main_music, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_option);

var v_x = view_xview[0];
var v_y = view_yview[0];
var v_width = view_wview[0];
var v_height = view_hview[0];

var draw_x = v_x + v_width * (3 / 4);
var base_y = v_y + v_height / 2;

for (var i = 0; i &lt; ds_list_size(level_list); i++) {
    var draw_y = base_y + v_height / 8 * (i - global.selected);
    
    var draw_string;
    var draw_col1;
    var draw_col2;
    
    if (i &gt; global.levels_completed) {
        draw_col1 = make_color_rgb(128, 128, 128);
        draw_col2 = make_color_rgb(196, 196, 196);
        draw_string = "LOCKED";
    }
    else {
        draw_col1 = make_color_rgb(128, 128, 0);
        draw_col2 = make_color_rgb(196, 196, 0);
        draw_string = "Level " + string(i + 1);
    }
    
    if (i == global.selected)
        draw_string = "&gt; " + draw_string + " &lt;";
    
    scr_draw_layered_text(draw_x, draw_y, draw_string, 1, draw_col1, draw_col2);
}

var title_x = v_x + v_width / 3;
var title_y = v_y + v_height / 2 - 36;

draw_set_halign(fa_left);

scr_draw_layered_text(title_x - 96, v_height - 40, "Select:#Confirm:#Go Back:", 1, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));

draw_set_halign(fa_right);

scr_draw_layered_text(title_x + 96, v_height - 40, "Up/Down#Enter#Escape", 1, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));

draw_set_halign(fa_center);

if (global.selected &lt;= global.levels_completed) {

    scr_draw_layered_text(title_x, v_height * (2 / 5), "Best Time:#" + scr_time_string(36000), 1, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));
    scr_draw_layered_text(title_x, v_height * (3 / 5), "Best Score:#" + string(0), 1, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));

    draw_set_font(fnt_complete);
    scr_draw_layered_text(title_x, v_y + 48, "Level " + string(global.selected + 1), 2, make_color_rgb(128, 128, 0), make_color_rgb(196, 196, 0));
}
else {
    draw_set_font(fnt_complete);
    scr_draw_layered_text(title_x, title_y, "LOCKED", 2, make_color_rgb(128, 128, 128), make_color_rgb(196, 196, 196));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
